<!doctype html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Visitor</title>

  <script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
  <script src="https://code.highcharts.com/highcharts.js"></script>
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
</head>
<body>

<nav class="navbar">
  <section class="navbar-brand">Current Visitors</section>
</nav>

<div id="container" style="height: 400px;"></div>
<div class="container" style="margin-top: 3em;">
  <div class="row">
    <div class="col-2"></div>
    <div class="col">
      <form>
        <div class="form-group">
          <h2>Web Worker Count: <span id="webworker_range_display">20</span></h2>
          <input id="webworker_range" class="range form-control" type="range"
                 min="1" max="20" value="4">
          <small id="hardware-warning" class="form-text text-danger" style="display: none;">
            Core limit exceeded, browser might crash :(
          </small>
        </div>

        <div class="form-group">
          <h2>Clicks Per Worker: <span id="webworker_clicks_display">5</span></h2>
          <input id="webworker_clicks" class="range form-control" type="range"
                 min="1" max="10000" value="5">
        </div>
      </form>

      <button id="track" class="btn btn-primary">Hit It!</button>
    </div>
    <div class="col-2"></div>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
  $('.range').on('input', function (evt) {
    var $target = $(evt.target);
    $('#' + $target.attr('id') + '_display').html($target.val());
    if ($target.attr('id') === 'webworker_range') {
      var $elHardwareWarning = $('#hardware-warning');
      if (Number($target.val()) > navigator.hardwareConcurrency) {
        $elHardwareWarning.show();
      }
      else {
        $elHardwareWarning.hide();
      }
    }
  });
</script>

<script type="text/javascript" charset="utf-8">
  Highcharts.theme = {
    "colors": ["#F92672", "#66D9EF", "#A6E22E", "#A6E22E"],
    "chart": {
      "backgroundColor": "#272822",
      "style": {
        "fontFamily": "Inconsolata",
        "color": "#A2A39C"
      }
    },
    "title": {
      "style": {
        "color": "#A2A39C"
      },
      "align": "left"
    },
    "subtitle": {
      "style": {
        "color": "#A2A39C"
      },
      "align": "left"
    },
    "legend": {
      "align": "right",
      "verticalAlign": "bottom",
      "itemStyle": {
        "fontWeight": "normal",
        "color": "#A2A39C"
      }
    },
    "xAxis": {
      "gridLineDashStyle": "Dot",
      "gridLineWidth": 1,
      "gridLineColor": "#A2A39C",
      "lineColor": "#A2A39C",
      "minorGridLineColor": "#A2A39C",
      "tickColor": "#A2A39C",
      "tickWidth": 1
    },
    "yAxis": {
      "gridLineDashStyle": "Dot",
      "gridLineColor": "#A2A39C",
      "lineColor": "#A2A39C",
      "minorGridLineColor": "#A2A39C",
      "tickColor": "#A2A39C",
      "tickWidth": 1
    }
  };

  // Apply the theme
  Highcharts.setOptions(Highcharts.theme);

  var chart = Highcharts.chart('container', {
    chart: {
      type: 'areaspline',
    },

    title: {
      text: 'Visitor Tracking Overview',
    },

    xAxis: {
      type: 'datetime'
    },

    series: [
      {
        name: 'Unique Visitors Count',
        animation: false,
        data: [],
      },
      {
        name: 'Current Clicks',
        animation: false,
        data: [],
      },
    ],

    plotOptions: {
      areaspline: {
        fillOpacity: 0.1,
        marker: {
          enabled: false,
        }
      }
    }
  });

  // the button action
  // var i = 0;
  // var generate = randomSin();
  // setInterval(function () {
  //   chart.series[0].addPoint([+(new Date()), generate()], true, false);
  //   i += 1;
  // }, 1000);

  // $('#button').click(function () {
  //   console.log(generate());
  // });

  function randomSin() {
    var value = 0, i = 0;
    return function () {
      value = Math.max(-10,
        Math.min(10, value +
          .8 * Math.random() -
          .4 + .2 * Math.cos(i += .2)));
      return value;
    }
  }

  // Create WebSocket connection.
  const socket = new WebSocket('ws://localhost:9293');
  const serverDelay = 5; // 5 seconds lag
  // Connection opened
  socket.addEventListener('open', function (event) {
    setInterval(function () {
      socket.send(JSON.stringify({
        time: Math.round(+(new Date()) / 1000) - serverDelay, // Server accept seconds only
      }));
    }, 1000);
  });

  // Listen for messages
  socket.addEventListener('message', function (event) {
    console.log('Message from server ', event.data);
    var visitData = JSON.parse(event.data);
    var newVisit = [visitData.time * 1000, visitData.count];
    chart.series[0].addPoint(newVisit, true, false);
  });
</script>
</body>
</html>